{"author": "Lukas Reiter", "plugins": [0, 6], "uuid": "1457a809-ec9e-45d6-a087-301e101f6e55", "version": "v1.0", "script": "\"\"\"\nThis script extracts all HTTP headers from HTTP requests and responses and\nadds them to the table above.\n\"\"\"\n# Do the initial setup\nif ref == 1:\n\theader = [\"Ref.\", \"Source\", \"URL\", \"Header Name\", \"Header Value\"]\n\ndef get_header_as_list(message_info, helpers, is_request):\n\t\"\"\"\n\tThis method implements the core functionality to extract the headers from the\n\tgiven IHttpRequestResponse object.\n\t\"\"\"\n\tresult = []\n\tif is_request:\n\t\titem = helpers.analyzeRequest(message_info.getRequest())\n\telse:\n\t\titem = helpers.analyzeResponse(message_info.getResponse())\n\tfor header in item.getHeaders():\n\t\theader_parts = header.split(\":\")\n\t\tif len(header_parts) > 1:\n\t\t\theader_name = header_parts[0]\n\t\t\theader_value = \":\".join(header_parts[1:])\n\t\t\tresult.append([header_name, header_value])\n\treturn result\n\n# Process only in-scope HTTP requests and responses\nif in_scope:\n\trows.extend([[ref, \"Request\", str(url), name, value] for name, value in get_header_as_list(message_info, helpers, True)])\n\trows.extend([[ref, \"Response\", str(url), name, value] for name, value in get_header_as_list(message_info, helpers, False)])\n\t", "name": "Header - Template Script to Extract All Headers From HTTP Requests and Responses"}